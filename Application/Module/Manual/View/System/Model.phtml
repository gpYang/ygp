<div id="gird">
    <div class="inner">
        <div class="book-title"><h1>3.5 模型层</h1></div>
        <hr>
        <div class="book-content">
            <div>
                框架中模型层的部署格式是Module/[:Module]/Model/[:Controller]Model,同一个模块下的模型不能重名.
                例如index模块下的test模型应该为Module/Index/TestModel,test即为模型名<br>
                具体的数据库操作会在后面<a href="/manual/library-db.html">4.1 db类</a>中详细讲解
                <h2>Module/Index/Model/TestModel.php</h2>
                <div class="code">
                    namespace Index;<br>
                    use System\Model;<br>
                    class TestModel extends Model {<br>
                    <div class="in_array">
                        public function __construct() {<br>
                        <p class="in_array">
                            parent::__construct('writer', 'reader');<span class="note">//定义写库和读库,和<a href="/manual/config-global.html">2.1 总配置</a>中的数据库连接名对应</span>
                        </p>
                        }<br>
                    </div>
                    }
                </div>
                <p class="notice">框架中默认写库连接名为writer,默认读库连接名为reader,如有需要可自行定义</p>
                定义好写库和读库后,框架会根据数据库操作自动实现读写分离,如两个库一致,可配置两个一样的连接名如
                <div class="code">
                    public function __construct() {<br>
                    <p class="in_array">
                        parent::__construct('reader', 'reader');
                    </p>
                    }<br>
                </div>
                类中有2个方法可强制切换读库和写库,当在查询语句中想用写库,插入语句中想用读库也可如下
                <div class="code">
                    $this->reader()->insert();
                    $this->writer()->select();
                </div>
                <span class="notice">注意:在每条语句执行之后,框架都会从新回到自动读写分离.</span>
            </div>
        </div>
    </div>
</div>
